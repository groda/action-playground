name: List files matching pattern 
run-name: List files 
# work in progress
# this action runs jobs: 
# List-Input-File gets file name from input and prints ✅ if file exists in the repository 
# (and ❌ if the file does not exist)
## see https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
on: 
  # needs to be called manually
  workflow_dispatch:
    inputs:
      notebook:
        description: 'Input the filename (wildcards are allowed)'
        required: true
        type: string
permissions:
  contents: write
jobs:
  List-Input-File:
    runs-on: ubuntu-latest
    steps:
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      # can I search directly on the repo? Without cloning to the runner?
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - run: echo "📝 Listing file"
      - name: List file provided as input
        uses: actions/checkout@v4
      - run: |
          FILE=${{ inputs.notebook }}
          f=$(find . -name "${FILE}" -print0)
          # The -print0 option in the find command is used to output the filenames 
          # followed by a null character (\0) instead of a newline (\n). 
          # This is particularly useful for handling filenames that contain special characters,
          # such as spaces, newlines, or other non-printing characters, which can cause issues 
          # in shell scripts.
          # xargs -0 reads the input as a null-separated list of strings. 
          # This ensures that filenames with embedded spaces, newlines, or other special characters 
          # are correctly processed as individual items.
          if [ -n "$f" ]; then
          echo "✅"
          echo "File $FILE exists."
           echo "$f" | xargs -0 -I {} echo "{}"
          else
          echo "❌"
           echo "File $FILE does not exist."
          fi
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - run: echo "🎉 Woohoo! Your action is complete! Have an amazing day and happy coding! 🚀"
